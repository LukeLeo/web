
if [docker pull] command on new setup pages fails then I need to
bail out of creating the kata.

- - - - - - - - - - - - - - - - - - - - -

setup page default-start-points
  on 1st step have 2 buttons
    [choose exercise] [no exercise]
  and no exercise goes straight to new-dojo-dialog
  for a kata which has no instructions file.

=========================================
=========================================

When creating a kata (host_disk_katas.rb)
save language manifest properties into katas manifest
so all kata's methods look at least like image_name, viz
  manifest_property || start_point.NAME

- - - - - - - - - - - - - - - - - - - - -

Add C# XUnit test framework.
http://xunit.github.io/

- - - - - - - - - - - - - - - - - - - - -

change output of [./cyber-dojo start-point ls] from relative paths to absolute paths
viz from
  NAME        TYPE        SRC
  custom      custom      ./../../start-points-custom
to
  NAME        TYPE        SRC
  custom      custom      /Users/jonjagger/repos/start-points-custom

- - - - - - - - - - - - - - - - - - - - -

Move runners from lib/code to app/lib/code

- - - - - - - - - - - - - - - - - - - - -

for tests I have to put red_amber_green lambdas (such as bash_unit)
into the output.colour_of

- - - - - - - - - - - - - - - - - - - - -

Add display-name (major,minor) etc to footer on enter page?

- - - - - - - - - - - - - - - - - - - - -

web_base/Dockerfile still has this line
   && cd ${CYBER_DOJO_HOME} ; bundle install --without development test \

- - - - - - - - - - - - - - - - - - - - -

Would be good to have a [cyber-dojo] cli command to export
a specific kata to a given folder. This would make it easier
to create custom exercises. Must not export to default VM
on Mac/Windows quickstart-terminal.

- - - - - - - - - - - - - - - - - - - - -

Make [cyber-dojo clean] remove dead containers as well as dead images?

- - - - - - - - - - - - - - - - - - - - -

Looking to make some smaller alpine-linux language images.
Specifically, C#-NUnit and Java-JUnit

Java
frolvlad/alpine-oraclejdk8:slim
  How big is it? ~166.9 MB  (vs 843.7 MB)
  docker run --rm frolvlad/alpine-oraclejdk8:slim sh -c "javac -version"
    javac 1.8.0_92
  There is a package called junit (branch=edge, repo=testing)

Put Alpine based small images into cyberdojo repo.

- - - - - - - - - - - - - - - - - - - - -

Debug logging seems to show clean_up (in cyber-dojo.sh) being called twice...
Is this because (clean_up && exit_fail) is in () and so is a sub-shell?

- - - - - - - - - - - - - - - - - - - - -

git 2.9+ has new  `--compaction-heuristic`
for improved diffs. Try to get this in place.

- - - - - - - - - - - - - - - - - - - - -

test/app_lib/start_points/languages
test/app_lib/start_points/exercises
test/app_lib/start_points/custom
These should all have the data-checker run against them as part of the tests.

- - - - - - - - - - - - - - - - - - - - -

add [ci skip] to git commit messages if you want
to skip the travis build

- - - - - - - - - - - - - - - - - - - - -

cyber-dojo.rb failure messages are
FAILED: ....
Check what [docker] does and mimic that.
$ docker images --ssss
flag provided but not defined: --ssss
See 'docker images --help'.
Test these with shunit2 tests.

- - - - - - - - - - - - - - - - - - - - -

app_controllers tests has this warning
/usr/lib/ruby/gems/2.3.0/gems/activesupport-4.1.0/lib/active_support/values/time_zone.rb:285: warning: circular argument reference - now
Tried upgrading to Ruby 4.2.6
solves this as long Gemfile.lock is not part of the docker context
(remove it from web's dockerignore file)
This causes a few app_controller deprecation warnings
and a load of app_controller test fails which seem to be due to bad URLs

- - - - - - - - - - - - - - - - - - - - -

Occasional test failures...
  ForkerControllerTest#test_'EAE021',
    when language no longer exists, the fork fails, and the reason given is language
  SetupControllerTest#test_'EB77D9',
    show_exercises page uses cached exercises that are runnable

  Tests are defintely not unit-tests and almost certainly have order
  dependencies. State of cache files. How to resolve?

  I could reinstate FakeDisk, leave env-vars for data ROOTs, then
  fill FakeDisk with known content, then do access to dojo methods
  such as dojo.exercises

  For now, deleting caches at start of app_controller tests.

- - - - - - - - - - - - - - - - - - - - -

Note: need a check that each docker image has a user in it called nobody
      (I don't think it's uid is important)

- - - - - - - - - - - - - - - - - - - - -

If the server is up you can still do [docker rmi image]
So I still need proper nil error handling on the setup pages

- - - - - - - - - - - - - - - - - - - - -

)) add another docker-compose.yml for main prod server
     prod server uses volume-mount for katas (not data-container)
     so I will need to use an docker-compose extension .yml file for
     specifying the katas (like I'll be doing for exercises/languages/instructions)

- - - - - - - - - - - - - - - - - - - - -

)) get latest image running on GCE
   Did it with hacked cyber-dojo script file that does not extract docker-compose.yml file
   from web container and mounts katas as a volume rather than a data-container.
   Had to make sure katas folder had user-rights matching user inside the web container.
   $ userdel cyber-dojo
   $ adduser --disabled-password --disabled-login --uid 19661 cyber-dojo
   $ cd /var/www/cyber-dojo
   $ sudo chown -R cyber-dojo:cyber-dojo katas
   $ cd ~
   $ sudo ./cyber-dojo pull all
   $ sudo ./cyber-dojo up

   Need to comment out this line in cyber-dojo.sh
     # one_time_creation_of_katas_data_container
   Need to remove this line from docker-compose.yml
     volumes_from:
       - ${CYBER_DOJO_KATAS_DATA_CONTAINER}:rw
   Need to add this
     volumes:
       - /var/www/cyber-dojo/katas:${CYBER_DOJO_ROOT}/katas:rw

- - - - - - - - - - - - - - - - - - - - -

)) get travis to push images to cdf hub
   push images to cyberdojofoundation hub if tests pass

- - - - - - - - - - - - - - - - - - - - -

)) documentation

- - - - - - - - - - - - - - - - - - - - -

)) add confirmation diagnostic to each [cyber-dojo] command?

----------------------------------------

Features James mentioned during our chat
- - - - - - - - - - - - - - - - - - - -

revert button is in diff dialog again

feature: on enter page, when kata id is entered and buttons become enabled
         it would be nice to see the display_name in the footer.

feature: sed in the editor (search and replace)

feature: copy one animal to a new one (keeping whole traffic-light history)

feature: fork giving two options, viz create new kata and create start-point

feature: replace duration on dashboard with time-ticks on top of minute columns.

feature: hovering over a traffic-light gives more detail, viz for changed files (not output)
         name of file, no of deleted lines, no of added lines

feature: traffic-lights have some visual indication if there is a
         "suspiciously large change"
         eg more than 1 file changed
         eg more than 3 lines changed in a non-test file

feature: hyperlink of compiler error on output to file and line number

feature: only one error in C/C++ projects

feature: colour syntax

# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

un-hardwire setting of 2 core env-vars in cyber-dojo script.
  export CYBER_DOJO_DATA_ROOT="/home/docker/data"
  export CYBER_DOJO_KATAS_ROOT="/home/docker/data/katas"

instructions refactored to be manifest'ed
  use disk[path].each_rdir('instructions') in its make_cache()
  Only instructions file would be shown on 2nd setup page.
