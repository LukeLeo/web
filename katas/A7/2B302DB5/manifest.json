{"id":"A72B302DB5","created":[2016,6,12,9,29,20],"language":"Java-JUnit","unit_test_framework":"junit","tab_size":4,"visible_files":{"HikerTest.java":"import org.junit.*;\nimport static org.junit.Assert.*;\n\npublic class HikerTest {\n\n    @Test\n    public void life_the_universe_and_everything() {\n        int expected = 42;\n        int actual = Hiker.answer();\n        assertEquals(expected, actual);\n    }\n}\n","Hiker.java":"\npublic class Hiker {\n\n    public static int answer() {\n        return 6 * 9;\n    }\n}\n","cyber-dojo.sh":"rm -f *.class\nCLASSES=.:`ls /junit/*.jar | tr '\\n' ':'`\njavac -Xlint:unchecked -Xlint:deprecation -cp $CLASSES  *.java\nif [ $? -eq 0 ]; then\n  # run test classes even if they are inner classes\n  # remove voluminous stack trace from output\n  java -cp $CLASSES org.junit.runner.JUnitCore `ls -1 *Test*.class | grep -v '\\\\$' | sed 's/\\(.*\\)\\..*/\\1/'` | grep -Ev 'org.junit.runner|org.junit.internal|sun.reflect|org.junit.Assert|java.lang.reflect|org.hamcrest'\nfi\n","output":"","instructions":"Given a string, strip all occurences of consecutively \noccuring backslash and newline characters. For example, \nassuming that:\n\"\\\\\" represents '\\' and \n\"\\n\" represents '\\n'\n\n  \"ab\\\\\\ncd\\\\\\nef\" --> \"abcdef\" (two stripped out)\n\n  \"abc\\\\\\ndef\"     --> \"abcdef\" (one stripped out)\n\n  \"abc\\n\\\\def\"     --> unchanged (wrong order)\n\n  \"abc\\\\def\"       --> unchanged (no \\n)\n\n  \"abc\\ndef\"       --> unchanged (no \\)\n\n  \"abcdef\"         --> unchanged\n\n\n"},"exercise":"Unsplice"}