
How to get the data folder(s) onto the server running the docker daemon?

1. create a temporary folder
2. git clone repos into the temp folder
3. create a temporary docker image using the folder as its context
4. issue a docker command to extract the folder from the docker-container

Like I did before for the creation of the katas data-container
plus the [cyber-dojo backup] command.
That happened from inside the web container (in cyber-dojo.rb)
So the 'scp' utility (see below) will also need to be
embedded inside cyber-dojo.rb
But I guess it would anyway.
What I mean is it won't have any remnant in the sh script
(like up/down/restart)


Make setting of languages/exercises/instructions a separate command.
Yes I prefer this.

cyber-dojo    languages-pull path
cyber-dojo    exercises-pull path
cyber-dojo instructions-pull path

cyber-dojo up
cyber-dojo down
cyber-dojo restart

This approach means I don't have to name the destination folder
on the docker server. It will always be the same folder.

where path could be a github url, which would do a git clone to get the source.
This means I will need git on the server.

example
cyber-dojo    languages-pull https://github.com/JonJagger/cyber-dojo-languages.git

Working
-------
Clone repo to named folder
$ git clone --depth 1 https://github.com/JonJagger/cyber-dojo-languages.git /tmp/cyber-dojo-languages

This includes .git folder.
Next step is to create docker image from this.
Need Dockerfile and .dockerignore

Should I load from hard disk volume or from data-container?

Also, implicit in this design is that a new languages data-container
overwrites the current one. That is not so good. It would be better
to be able to choose from several that are available. How about...

$ ./cyber-dojo volume name URL

which you can use for languages,instructions,exercises.
Then have defaults for each of them which correspond to
the default data images on the cdf hub. Then also

$ ./cyber-dojo up [languages=NAME] [exercises=NAME] [instructions=NAME]

Will this work? When you create a volume do you set the path it is
mapped to? Or is that set in the Dockerfile's VOLUME command?
Think I need to incorporate LEI into the command

$ ./cyber-dojo languages name URL
$ ./cyber-dojo exercise name URL
$ ./cyber-dojo instructions name URL

Maybe

$ ./cyber-dojo languages name=URL
$ ./cyber-dojo exercise name=URL
$ ./cyber-dojo instructions name=URL

This means the name's will need to be passed into to docker-compose.yml
so it can use volumes_from: to mount them.

For the default-language data-container, the default-language image
will exist but I will still need to create the data-container
from the image when using [$ ./cyber-dojo up]
Implies script will need to detect if data-container already exists.

Another option is to create the containers only when the
$ ./cyber-dojo up ...
command is issued.

Another thorny issue could be that the
$ ./cyber-dojo catalog
command also requires the language volume.

This suggests a config file that stores the current
choice of language,exercise,instructions.

Would be nice to allow several data-containers to be "unioned"
$ ./cyber-dojo up languages=jon1,jon2

This approach also suggests that the pulling of docker images is tied
to the selection of language-manifests that are pulled via the
cyber-dojo    languages-push path

----------------------------------------

Day with James :-)


mkdir tryout
cd tryout
git clone https://github.com/JonJagger/cyber-dojo.git
cd cyber-dojo
git branch drop-katas-data-container origin/drop-katas-data-container
git checkout drop-katas-data-container

Edited app/docker/cyber-dojo to make two hard-wired env-vars for paths
point to new locations (under tryout)

Built a new web image

Tried to create a new server ontop of old one.
Could not do [./cyber-dojo restart]
>>>>>>It complained that cdf-nginx and cdf-web already existed.
Manually deleted them.

Started server.
Failed to create a kata because of permissions.
   (Note that katas is being volume-mounted (not volumes-from) in docker-compose.yml)
There is no cyber-dojo user.
On my dev default server
cat /etc/passwd
cyber-dojo:x:19661:19661:Linux User,,,:/home/cyber-dojo:/bin/sh

And this user does not exist on James's machine (Ubuntu)
$ adduser --disabled-password --no-create-home --uid 19661 cyber-dojo
Then
$ cd app/data
$ chown -R cyber-dojo katas

Then could create kata :-)
But problem with no root /cpputest folder (same as I had on my dev macbook)

$ docker run --rm -it cyberdojofoundation/cpp_cpputest sh
$ cd /
$ ls -al

Indeed there is no root folder /cpputest

Tried to recreate gpp_cpputest docker image
rebuilt image
didn't work
There is no user called cyber-dojo *inside* the gpp_cpputest container
Problem is that the image gpp_cpputest is not based FROM user-base
and so does not have cyber-dojo user inside it.
>>>>>>>I think this is not relevant. The user that runs inside the test container
is nobody. The cyber-dojo user is needed only inside the web container
(and also possibly on the host server for volume-mount interactions)


Switched create page to show plain languages
Make katas using C++, CppUTest (and C, CppUTest)
was ok, edited cyber-dojo.sh, /cpputest was there, got a red traffic-light
on the server went to katas/50/5C05.../manifest.json
language:C++ (g++)-CppUTest

Switched create page back to custom exercises.
Made new kata
katas/21/AD6F.../manifest.json
language:C

Aha!!!!
Manually edited the katas manifest.json
to "C++ (g++)-CppUTest"
and it worked. Woooooohoooooo

So the problem is the creation of the kata's manifest.
Looked at the code and fixed up the errors.
Works for both setup cases now: languages and exercises.

Retro: would be nice if you can find out the name of the
container/image from inside the container.

-------------

Tried again.

new server
installed docker
pulled from gihub
pulled new branch
edited app/docker/cyber-dojo to make two hard-wired env-vars for paths
built a new web image
>>>>>>>>tried to create kata - failed with nil Rails error.
Look into this on my own server.


Inside web image ls at root shows this
....  20530566 May 10 10:53 docker-1.11.1.tgz
There is also an empty docker folder there too.
These can be removed in the Dockerfile
>>>>>>>>Needs to be...

RUN apk --update add curl \
  && curl -OL https://get.docker.com/builds/Linux/x86_64/docker-${DOCKER_VERSION}.tgz \
  && tar -xvzf docker-${DOCKER_VERSION}.tgz \
  && mv docker/* /usr/bin/ \
  && rmdir /docker \
  && rm /docker-${DOCKER_VERSION}.tgz \
  && apk del curl \


--------------

Features James mentioned during our chat
- - - - - - - - - - - - - - - - - - - -

revert button is in diff dialog again

on enter page, when kata id is entered and buttons become enabled
it would be nice to see the language and exercise names in the footer.

feature: sed in the editor (search and replace)

feature: copy one animal to a new one (keeping whole traffic-light history)

feature: fork giving two options, viz create new exercise-starting-point.

feature: replace duration on dashboard with time-ticks on top of minute columns.

feature: hovering over a traffic-light gives more detail, viz for changed files (not output)
         name of file, no of deleted lines, no of added lines

feature: traffic-lights have some visual indication if there is a
         "suspiciously large change"
         eg more than 1 file changed
         eg more than 3 lines changed in a non-test file

feature: hyperlink of compiler error on output to file and line number

feature: one one error in C/C++ projects

feature: colour syntax


